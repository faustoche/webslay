# le bloc server donne la configuration par defaut pour un host::port
# chaque bloc location a l'interieur peut surcharger ou completer 
# cette configuration pour une partie de l'arborescence des URLs

server{
    # LISTEN
    # definit l'IP et/ou le port sur lequel le serveur ecoute
    # ouvrir un socket sur le port 8080 (par defaut sur toutes les interfaces reseau = 0.0.0.0:8080)
    # si 127.0.0.1:8080 : ecoute uniquement sur 8080 en local et pas depuis l'exterieur
    # syntaxe :
    # listen 127.0.0.1:8080;
    # listen 8080; port seul -> toutes les interfaces
    # listen 127.0.0.1:8080;

    # SERVER_NAME
    # nom de domaine/ alias associes au serveur
    # peut etre vide, alors le premier server defini sur un host:port est le serveur par defaut
    # syntaxe :
    # server_name localhost wwww.monsite.com;

    # ERROR_PAGE
    # definit une page personnalisee pour certains codes d'erreur
    # la cle est un code HTTP (ou plusieurs), la valeur est un chemin relatif
    # syntaxe : (verifier quels codes derreur faire)
    # error_page 404 /errors/404.html
    # error_page 500 502 503 504 /errors.50x.html;

    # CLIENT_MAX_BODY_SIZE
    # taille max d'une requete
    # definir une max body size par defaut pour le server, possible de la changer avec la directive
    # syntaxe :
    # client_max_body_size 1M; ou en octets

    # INDEX
    # fichier par defaut a afficher si la requete est un repertoire
    # l'index par defaut du server est index.html SAUF si il est change 
    # avec la directive index au niveau du block server
    # Ngnix permet plusieurs fichiers index --> il faut prendre le premier qui fonctionne
    # si index est definit au niveau du server il s'applique partout
    # si index definit dans location la valeur est definie uniquement dans cette location
    # si l'utilisateur ne demande pas un fichier precis mais precise juste "/"
    # par ex : "http:localhost::8080/"
    # le serveur voit le chemin demande -> ./www
    # puis regarde la directive "index" et sert le fichier ./www/index.html
    index www/index.html www/index2.html www/index3.html;

    # pour le ROOT du serveur mettre en brut la racine par defaut "./www" dans le code

    # location /www/images/ {
    # }

    ############## Directives par route (location)
    # ROOT ? ou ALIAS ?
    # root concatene le chemin de la location avec le chemin du fichier demande
    # alias remplace completement le chemin de la location par un autre chemin

    # INDEX

    # METHODS
    # liste des methodes HTTP acceptees pour la route
    # si methode demandee n'est pas autorisee => Bad Request
    # si la directive n'est pas utilisee alors par defaut toutes les methodes sont autorisees
    # syntaxe :
    # methods GET POST DELETE;

    # RETURN ou REDIRECT
    # redirige la route vers une autre URL
    # syntaxe :
    # return 301 http:exemple.com

    # AUTOINDEX
    # active/desactive le listing du contenu d'un repertoire (le serveur genere une page HTML listant le contenu du dossier)
    # syntaxe :
    # autoindex on;
    # autoindex of;

    # CGI_EXTENSION et CGI_PATH
    # associe une extension de fihcier a un binaire CGI
    # syntaxe :
    # cgi_extension .php;
    # cgi_path /usr/bin/php-cgi;

    # UPLOAD_ENABLE et UPLOAD_STORE
    # active l'upload pour cette route et definit ou stocker les fichiers
    # syntaxe :
    # upload_enable on;
    # upload_store /tmp/uploads;

}

server{

    index index.html www/index2.html www/index3.html;



}

